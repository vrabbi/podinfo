apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: example
    app.kubernetes.io/version: 0.0.0-devel
  name: example
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: example
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9797"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: example
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - ./podinfo
        - --level=info
        - --port=9898
        - --port-metrics=9797
        env:
        - name: PODINFO_UI_COLOR
          value: '#34577c'
        image: ghcr.io/stefanprodan/podinfo:6.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: example
        ports:
        - containerPort: 9898
          name: http
          protocol: TCP
        - containerPort: 9797
          name: http-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        volumeMounts:
        - mountPath: /data
          name: data
      serviceAccountName: example
      volumes:
      - emptyDir: {}
        name: data
